$big: 30vmin;
$small: 14%;
$color: rgba(dodgerblue, 1); // fallback color if hsla is not used
$anim-delay-unit: .2s;
// CSS animation is overriden in JS
$anim-rings-container: rotate 1.7s linear infinite;
$anim-rings: rotate linear 3.7s infinite;
// http://easings.net/#easeInOutBack
$anim-ring: rotate cubic-bezier(0.68, -0.55, 0.265, 1.55) 5.1s infinite; 

body {
  overflow: hidden;
}

.rings-container {
  width: 300px;
  height: 300px;
  width: $big;
  height: $big;
  animation: $anim-rings-container;
  border-radius: 50%;
  position: absolute;
  left: 40%;
  top: 40%;
  left: calc(50% - (#{$big})/2);
  top: calc(50% - (#{$big})/2);
}

.rings {
  position: absolute;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
  animation: $anim-rings;
  border-radius: 50%;
  @for $i from 1 through 20 {
    :nth-of-type(#{$i}) {
      animation-delay: ($i - 1) * $anim-delay-unit * -1;
      &:after {
        background: hsla(190 + ($i*1), 80%, 50%, 1);
      }
    }
  }
}

.filter-gooey {
  filter: url("#goo");
}


.anim-direction-reverse {
  animation-direction: reverse !important; // immutable
}

.anim-direction-normal {
  animation-direction: normal !important; // immutable
}

.child-anim-direction-reverse {
  > * {
    animation-direction: reverse !important; // immutable
  }
}

.child-anim-direction-normal {
  > * {
    animation-direction: normal !important; // immutable
  }
}

.ring {
  margin: 0 auto;
  border-radius: 50%;
  position: absolute;
  width: 100%;
  height: 100%;
  animation: $anim-ring;
  animation-direction: reverse;
  &:after {
    content: '';
    display: block;
    position: absolute;
    top: calc(-#{$small/2});
    left: calc(50% - #{$small/2});
    border-radius: 50%;
    width: $small;
    height: $small;
    background: $color;
  }
}

.anim-pause{
 animation-play-state: paused;
  * {
     animation-play-state: paused;
  }
}


.hidden,
svg[data-definition] {
  position: absolute;
  height: 0;
}

@keyframes rotate {
  to {
    transform: rotate(1turn);
  }
}

// IE hack usage
@keyframes rotate2 {
  to {
    transform: rotate(1turn);
  }
}